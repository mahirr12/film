{"ast":null,"code":"import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearAnimationStore } from './store.mjs';\nimport { appearStoreId } from './store-id.mjs';\nfunction handoffOptimizedAppearAnimation(id, name, value,\n/**\n * This function is loaded via window by startOptimisedAnimation.\n * By accepting `sync` as an argument, rather than using it via\n * import, it can be kept out of the first-load Framer bundle,\n * while also allowing this function to not be included in\n * Framer Motion bundles where it's not needed.\n */\nsync) {\n  const storeId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n  const {\n    animation,\n    ready\n  } = appearAnimationStore.get(storeId) || {};\n  if (!animation) return 0;\n  const cancelOptimisedAnimation = () => {\n    appearAnimationStore.delete(storeId);\n    /**\n     * Animation.cancel() throws so it needs to be wrapped in a try/catch\n     */\n    try {\n      animation.cancel();\n    } catch (e) {}\n  };\n  if (ready) {\n    const sampledTime = performance.now();\n    /**\n     * Resync handoff animation with optimised animation.\n     *\n     * This step would be unnecessary if we triggered animateChanges() in useEffect,\n     * but due to potential hydration errors we currently fire them in useLayoutEffect.\n     *\n     * By the time we're safely ready to cancel the optimised WAAPI animation,\n     * the main thread might have been blocked and desynced the two animations.\n     *\n     * Here, we resync the two animations before the optimised WAAPI animation is cancelled.\n     */\n    sync.update(() => {\n      if (value.animation) {\n        value.animation.currentTime = performance.now() - sampledTime;\n      }\n    });\n    /**\n     * We allow the animation to persist until the next frame:\n     *   1. So it continues to play until Framer Motion is ready to render\n     *      (avoiding a potential flash of the element's original state)\n     *   2. As all independent transforms share a single transform animation, stopping\n     *      it synchronously would prevent subsequent transforms from handing off.\n     */\n    sync.render(cancelOptimisedAnimation);\n    return animation.currentTime || 0;\n  } else {\n    cancelOptimisedAnimation();\n    return 0;\n  }\n}\nexport { handoffOptimizedAppearAnimation };","map":{"version":3,"names":["transformProps","appearAnimationStore","appearStoreId","handoffOptimizedAppearAnimation","id","name","value","sync","storeId","has","animation","ready","get","cancelOptimisedAnimation","delete","cancel","e","sampledTime","performance","now","update","currentTime","render"],"sources":["C:/Users/Admin/Desktop/cff/filmProject/node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearAnimationStore } from './store.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name, value, \n/**\n * This function is loaded via window by startOptimisedAnimation.\n * By accepting `sync` as an argument, rather than using it via\n * import, it can be kept out of the first-load Framer bundle,\n * while also allowing this function to not be included in\n * Framer Motion bundles where it's not needed.\n */\nsync) {\n    const storeId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const { animation, ready } = appearAnimationStore.get(storeId) || {};\n    if (!animation)\n        return 0;\n    const cancelOptimisedAnimation = () => {\n        appearAnimationStore.delete(storeId);\n        /**\n         * Animation.cancel() throws so it needs to be wrapped in a try/catch\n         */\n        try {\n            animation.cancel();\n        }\n        catch (e) { }\n    };\n    if (ready) {\n        const sampledTime = performance.now();\n        /**\n         * Resync handoff animation with optimised animation.\n         *\n         * This step would be unnecessary if we triggered animateChanges() in useEffect,\n         * but due to potential hydration errors we currently fire them in useLayoutEffect.\n         *\n         * By the time we're safely ready to cancel the optimised WAAPI animation,\n         * the main thread might have been blocked and desynced the two animations.\n         *\n         * Here, we resync the two animations before the optimised WAAPI animation is cancelled.\n         */\n        sync.update(() => {\n            if (value.animation) {\n                value.animation.currentTime = performance.now() - sampledTime;\n            }\n        });\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(cancelOptimisedAnimation);\n        return animation.currentTime || 0;\n    }\n    else {\n        cancelOptimisedAnimation();\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,uCAAuC;AACtE,SAASC,oBAAoB,QAAQ,aAAa;AAClD,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,SAASC,+BAA+B,CAACC,EAAE,EAAEC,IAAI,EAAEC,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAI,EAAE;EACF,MAAMC,OAAO,GAAGN,aAAa,CAACE,EAAE,EAAEJ,cAAc,CAACS,GAAG,CAACJ,IAAI,CAAC,GAAG,WAAW,GAAGA,IAAI,CAAC;EAChF,MAAM;IAAEK,SAAS;IAAEC;EAAM,CAAC,GAAGV,oBAAoB,CAACW,GAAG,CAACJ,OAAO,CAAC,IAAI,CAAC,CAAC;EACpE,IAAI,CAACE,SAAS,EACV,OAAO,CAAC;EACZ,MAAMG,wBAAwB,GAAG,MAAM;IACnCZ,oBAAoB,CAACa,MAAM,CAACN,OAAO,CAAC;IACpC;AACR;AACA;IACQ,IAAI;MACAE,SAAS,CAACK,MAAM,EAAE;IACtB,CAAC,CACD,OAAOC,CAAC,EAAE,CAAE;EAChB,CAAC;EACD,IAAIL,KAAK,EAAE;IACP,MAAMM,WAAW,GAAGC,WAAW,CAACC,GAAG,EAAE;IACrC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQZ,IAAI,CAACa,MAAM,CAAC,MAAM;MACd,IAAId,KAAK,CAACI,SAAS,EAAE;QACjBJ,KAAK,CAACI,SAAS,CAACW,WAAW,GAAGH,WAAW,CAACC,GAAG,EAAE,GAAGF,WAAW;MACjE;IACJ,CAAC,CAAC;IACF;AACR;AACA;AACA;AACA;AACA;AACA;IACQV,IAAI,CAACe,MAAM,CAACT,wBAAwB,CAAC;IACrC,OAAOH,SAAS,CAACW,WAAW,IAAI,CAAC;EACrC,CAAC,MACI;IACDR,wBAAwB,EAAE;IAC1B,OAAO,CAAC;EACZ;AACJ;AAEA,SAASV,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}