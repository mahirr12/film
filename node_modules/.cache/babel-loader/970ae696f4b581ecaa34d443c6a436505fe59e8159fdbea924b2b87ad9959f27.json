{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\cff\\\\filmProject\\\\src\\\\Components\\\\movieitem\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToList, removeToList } from '../../redux/actions/action';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './style.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieItem = props => {\n  _s();\n  const [statusAdd, setStatusAdd] = useState(false);\n  const [statusHave, setStatusHave] = useState(false);\n  const nav = useNavigate(null);\n  const dispatch = useDispatch();\n  const {\n    list\n  } = useSelector(state => state);\n  const addList = props => {\n    dispatch(addToList(props));\n    setStatusAdd(true);\n    setTimeout(() => {\n      setStatusAdd(false);\n    }, 900);\n  };\n  const removeItemListAlert = props => {\n    dispatch(removeToList(props));\n    setStatusHave(true);\n    setTimeout(() => {\n      setStatusHave(false);\n    }, 900);\n  };\n  const getMovieDetail = id => {\n    nav(`/movie/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"movie-item\",\n      children: [(props === null || props === void 0 ? void 0 : props.Poster) === \"N/A\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"movie-item_poster\",\n        src: \"https://media.comicbook.com/files/img/default-movie.png\",\n        alt: props === null || props === void 0 ? void 0 : props.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"movie-item_poster\",\n        src: props === null || props === void 0 ? void 0 : props.Poster,\n        alt: props === null || props === void 0 ? void 0 : props.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item_info\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${props.imdbID}`,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"movie-item_title\",\n            children: props === null || props === void 0 ? void 0 : props.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-item_action\",\n      children: [list.find(item => item.imdbID === props.imdbID) ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeItemListAlert(props),\n        children: [\" \", /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addList(props),\n        children: /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          getMovieDetail(props.imdbID);\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MovieItem, \"wIw5Ne7xcNYl0hlQxTZBrVCLFNA=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = MovieItem;\nvar _c;\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addToList","removeToList","FavoriteBorderIcon","FavoriteIcon","InfoIcon","Link","useNavigate","MovieItem","props","statusAdd","setStatusAdd","statusHave","setStatusHave","nav","dispatch","list","state","addList","setTimeout","removeItemListAlert","getMovieDetail","id","Poster","Title","imdbID","find","item"],"sources":["C:/Users/Admin/Desktop/cff/filmProject/src/Components/movieitem/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToList, removeToList } from '../../redux/actions/action';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './style.css';\r\n\r\n\r\nexport const MovieItem = (props) => {\r\n\r\n    const [statusAdd, setStatusAdd] = useState(false)\r\n    const [statusHave, setStatusHave] = useState(false)\r\n    const nav = useNavigate(null)\r\n    const dispatch = useDispatch()\r\n    const { list } = useSelector(state => state)\r\n\r\n    const addList = (props) => {\r\n        dispatch(addToList(props))\r\n        setStatusAdd(true)\r\n        setTimeout(() => {\r\n            setStatusAdd(false)\r\n        }, 900)\r\n    }\r\n\r\n    const removeItemListAlert = (props) => {\r\n        dispatch(removeToList(props))\r\n        setStatusHave(true)\r\n        setTimeout(() => {\r\n            setStatusHave(false)\r\n        }, 900)\r\n    }\r\n\r\n\r\n    const getMovieDetail = (id) => {\r\n        nav(`/movie/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <article className=\"movie-item\">\r\n                {props?.Poster === \"N/A\" ?\r\n                    <img className=\"movie-item_poster\"\r\n                        src=\"https://media.comicbook.com/files/img/default-movie.png\"\r\n                        alt={props?.Title} />\r\n                    : <img className=\"movie-item_poster\"\r\n                        src={props?.Poster} alt={props?.Title} />\r\n                }\r\n\r\n                <div className=\"movie-item_info\">\r\n                    <Link to={`/movie/${props.imdbID}`}><h3 className=\"movie-item_title\">{props?.Title}</h3></Link>\r\n                </div>\r\n\r\n\r\n            </article>\r\n            <div className='movie-item_action'>\r\n                {list.find(item => item.imdbID === props.imdbID) ?\r\n                    <button onClick={() => removeItemListAlert(props)} > <FavoriteIcon /></button> :\r\n                    <button onClick={() => addList(props)}><FavoriteBorderIcon /></button>}\r\n                <button onClick={() => { getMovieDetail(props.imdbID) }}><InfoIcon /></button>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}