{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\cff\\\\filmProject\\\\src\\\\components\\\\favorites\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Alert, AlertIcon, Stack } from '@chakra-ui/react';\nimport { listIsEmpty, localStorageAction, removeToList } from '../../redux/actions/action';\nimport { useRef } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Favorites = () => {\n  _s();\n  const [listName, setListName] = useState(\"\");\n  const [saveList, setSaveList] = useState(false);\n  const [data, setData] = useState();\n  const {\n    list,\n    localdata\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const removeList = param => {\n    dispatch(removeToList(param));\n  };\n  const favlistOverflow = useRef(null);\n  const [listHeight, setListHeight] = useState(0);\n  useEffect(() => {\n    setListHeight(favlistOverflow.current.clientHeight);\n  }, [list]);\n  const getSaveList = e => {\n    e.preventDefault();\n    setListName(\"\");\n    const listObj = {\n      title: listName,\n      movies: list\n    };\n    fetch('https://acb-api.algoritmika.org/api/movies/list', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(listObj)\n    }).then(res => res.json()).then(apiData => {\n      setData(apiData);\n      dispatch(localStorageAction([apiData]));\n    }).finally(() => {\n      dispatch(listIsEmpty());\n      setSaveList(true);\n      setTimeout(() => {\n        setSaveList(false);\n      }, 2000);\n      console.log(localdata);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"favorites\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getSaveList,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"New list\",\n        className: \"favorites__name\",\n        value: listName,\n        onChange: e => {\n          setListName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"favorites__save\",\n        disabled: !listName || !list.length,\n        children: \"Save list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), data ? /*#__PURE__*/_jsxDEV(Link, {\n      to: `/listdetail/${data.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"favorites__save\",\n        children: [\"Go to list : \", data.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"favorites__list\",\n      ref: favlistOverflow,\n      style: {\n        overflowY: listHeight > 370 ? 'scroll' : 'auto',\n        paddingRight: listHeight > 370 ? '10px' : '0',\n        maxHeight: listHeight > 370 ? '375px' : 'auto'\n      },\n      children: list === null || list === void 0 ? void 0 : list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item === null || item === void 0 ? void 0 : item.Title, \" (\", item === null || item === void 0 ? void 0 : item.Year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            removeList(item);\n          },\n          className: \"list-btn\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, item === null || item === void 0 ? void 0 : item.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), saveList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"success\",\n          variant: \"solid\",\n          bgColor: \"whatsapp\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), \"Added a list to the my lists !\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Favorites, \"RFGKksBHvgBehIMmGvqVWfLRtOc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Link","Alert","AlertIcon","Stack","listIsEmpty","localStorageAction","removeToList","useRef","Favorites","listName","setListName","saveList","setSaveList","data","setData","list","localdata","state","dispatch","removeList","param","favlistOverflow","listHeight","setListHeight","current","clientHeight","getSaveList","e","preventDefault","listObj","title","movies","fetch","method","headers","body","JSON","stringify","then","res","json","apiData","finally","setTimeout","console","log","target","value","length","id","overflowY","paddingRight","maxHeight","map","item","Title","Year","imdbID"],"sources":["C:/Users/Admin/Desktop/cff/filmProject/src/components/favorites/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Alert, AlertIcon, Stack } from '@chakra-ui/react'\r\nimport { listIsEmpty, localStorageAction, removeToList } from '../../redux/actions/action';\r\nimport { useRef } from 'react';\r\n\r\nimport './style.css';\r\n\r\n\r\nexport const Favorites = () => {\r\n    const [listName, setListName] = useState(\"\");\r\n    const [saveList, setSaveList] = useState(false)\r\n    const [data, setData] = useState();\r\n    const { list, localdata } = useSelector(state => state)\r\n\r\n    const dispatch = useDispatch()\r\n    const removeList = (param) => {\r\n        dispatch(removeToList(param))\r\n    }\r\n\r\n\r\n    const favlistOverflow = useRef(null);\r\n    const [listHeight, setListHeight] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setListHeight(favlistOverflow.current.clientHeight)\r\n    }, [list])\r\n\r\n\r\n    const getSaveList = (e) => {\r\n        e.preventDefault()\r\n        setListName(\"\")\r\n        const listObj = {\r\n            title: listName,\r\n            movies: list\r\n        }\r\n\r\n        fetch('https://acb-api.algoritmika.org/api/movies/list', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(listObj),\r\n        })\r\n            .then(res => res.json())\r\n            .then(apiData => {\r\n                setData(apiData)\r\n                dispatch(localStorageAction([apiData]))\r\n            })\r\n            .finally(() => {\r\n                dispatch(listIsEmpty())\r\n                setSaveList(true)\r\n                setTimeout(() => {\r\n                    setSaveList(false)\r\n                }, 2000)\r\n                console.log(localdata);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"favorites\">\r\n            <form onSubmit={getSaveList}>\r\n                <input\r\n                    placeholder='New list'\r\n                    className=\"favorites__name\"\r\n                    value={listName}\r\n                    onChange={(e) => { setListName(e.target.value) }}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"favorites__save\"\r\n                    disabled={!listName || !list.length}>Save list</button>\r\n            </form>\r\n            {data ? <Link to={`/listdetail/${data.id}`} >\r\n                <button className=\"favorites__save\">Go to list : {data.title}</button>\r\n            </Link> : null\r\n            }\r\n\r\n            <ul className=\"favorites__list\" ref={favlistOverflow}\r\n                style={{\r\n                    overflowY: listHeight > 370 ? 'scroll' : 'auto',\r\n                    paddingRight: listHeight > 370 ? '10px' : '0',\r\n                    maxHeight: listHeight > 370 ? '375px' : 'auto'\r\n                }}>\r\n                {list?.map((item) => (<li key={item?.imdbID} className=\"list-item\">\r\n                    <span>{item?.Title} ({item?.Year})</span>\r\n                    <button\r\n                        onClick={() => { removeList(item) }}\r\n                        className=\"list-btn\">x</button></li>))}\r\n            </ul>\r\n\r\n            {saveList ? <div className='alert'>\r\n                <Stack>\r\n                    <Alert status='success' variant='solid' bgColor=\"whatsapp\">\r\n                        <AlertIcon />\r\n                        Added a list to the my lists !\r\n                    </Alert>\r\n                </Stack>\r\n            </div> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}